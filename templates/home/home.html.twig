{% extends 'base.html.twig' %}

{% block localstyle %}
    <style>
        content {
            padding:0px;
        }
        ul {
            padding-left:10px;
            list-style-type:none;
        }
        .file-link {
            font-size:75%;
        }
    </style>
{% endblock %}

{% import _self as macros %}

{% block body %}
    <div class="d-flex">
        <div class="sidebar d-flex flex-column" style="width: 300px; border-right: 1px solid #ccc; padding: 10px;">
            <div class="flex-grow-1">
                {{ macros.file_tree(files, projectId, '', 0) }}
            </div>
            <div style="zoom:60%">projectID = {{ projectUuid }} </div>
        </div>
        <div id="file-viewer" style="flex-grow: 1; padding: 10px; background-color: #fff">
            <iframe id="preview-frame" style="width: 100%; height: 600px; border: none;"></iframe>
        </div>
    </div>

    <script>
        function adjustIframeHeight() {
            let iframe = document.getElementById("preview-frame");
            iframe.style.height = window.innerHeight - iframe.offsetTop - 20+ "px";
        }

        document.addEventListener("DOMContentLoaded", function () {
            adjustIframeHeight();
            window.addEventListener("resize", adjustIframeHeight);

            document.querySelectorAll(".folder-toggle").forEach(function(toggle) {
                toggle.addEventListener("click", function() {
                    let sublist = this.nextElementSibling;
                    if (sublist.style.display === "none") {
                        sublist.style.display = "block";
                    } else {
                        sublist.style.display = "none";
                    }
                });
            });

            document.querySelectorAll(".file-link").forEach(function(link) {
                link.addEventListener("click", function(event) {
                    event.preventDefault();
                    let filePath = this.getAttribute("data-file-path");
                    let url = "{{ path('view_file', { idProject: projectId, filePath: 'xxx' }) }}";
                    url=url.replace('xxx',filePath);
                    document.getElementById("preview-frame").src = url;

                    // Mettre à jour l'URL dans la barre d'adresse
                    let newUrl = new URL(window.location);
                    newUrl.searchParams.set("doc", filePath);
                    history.pushState({}, "", newUrl);               
                });
            });

            {% if doc %}
                let url = "{{ path('view_file', { idProject: projectId, filePath: doc }) }}";
                document.getElementById("preview-frame").src = url;

                let fileElement = document.querySelector(`[data-file-path="{{doc}}"]`);
                if (fileElement) {
                    // Déplier les parents pour le rendre visible
                    let parent = fileElement.closest("ul");
                    while (parent) {
                        parent.style.display = "block"; // Affiche le UL parent
                        let parentLi = parent.closest("li");
                        parent = parentLi ? parentLi.closest("ul") : null;
                    }
                }                
            {% endif %}
        });
    </script>
{% endblock %}

{% macro file_tree(files, projectId, basePath, niveau) %}
    {% if files is iterable %}
        <ul {{(niveau>0?'style="display:none;"':'')}}>
            {% for file, subFiles in files %}
                <li>
                    {% if subFiles is iterable %}
                        <span class="folder-toggle" style="cursor: pointer; font-weight: bold;">{{ file }}</span>
                        {{ _self.file_tree(subFiles, projectId, file, niveau+1) }}
                    {% else %}
                        <a href="#" class="file-link" data-file-path="{{ subFiles|trim('/') }}">{{ file|replace({".html":""}) }}</a>
                    {% endif %}
                </li>
            {% endfor %}
        </ul>
    {% endif %}
{% endmacro %}